openapi: 3.0.1
info:
  title: Personal Budget 2
  version: 1.0.0
  description: An api for 'personal budget 2' project on Codecademy's backend engineer path.
servers:
  - url: http://localhost:3000
paths:
  /envelopes:
    get:
      summary: Returns a list of all envelopes.
      responses:
        '200':
          description: A JSON Array of envelopes
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      summary: Add a new envelope
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                amount:
                  type: integer
              example:
                name: Madindk√∏b
                amount: 3000
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request body
  /envelopes/{envelopeId}:
    get:
      summary: return an envelope by ID.
      parameters:
        - name: envelopeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            minimum: 0
            example: 197
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  amount:
                    type: integer
                
        '404':
          description: Enevelope not found
    delete:
      summary: delete envelope by ID.
      parameters:
        - name: envelopeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            minimum: 0
            example: 99
      responses:
        '200':
          description: Envelope deleted
        '404':
          description: Envelope not found
  /expenses:
    summary: Get/Add expenses
    get:
      summary: Returns a list of all expenses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  amount:
                    type: integer
                  date:
                    type: string
                    format: date
                example:
                  id: 5
                  name: benzin
                  amount: 250
                  date: 05-02-2023
        '400':
          description: No expenses found
          
    post:
      summary: Add a new expense
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                amount:
                  type: integer
                date:
                  type: string
                  format: date
              example:
                name: To-go kaffe
                amount: 30
                date: "02-05-2023"
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request body
  /expenses/{expenseId}:
    summary: Retuerns expense by ID.
    parameters:
      - name: expenseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          minimum: 0
          example: 382
    get:
      summary: Get expense by ID.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  amount:
                    type: integer
                  date:
                    type: string
                    format: date
                example:
                  id: 32
                  name: Biografbilletter
                  amount: 145
                  date: "04-05-2023"
        '400':
          description: Expense not found
    delete:
      summary: Delete expense by ID.
      responses:
        '200':
          description: Expense deleted
        '400':
           description: Expense not found
    
        
    
    
